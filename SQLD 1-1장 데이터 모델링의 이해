<1장 데이터 모델링의 이해>

▶ 1절 데이터 모델의 이해

모델링: 현실세계를 단순화시켜 표현
=> 특징으로는 추상화/단순화/명확성이 있다
추상화- 일정한 형식에 맞추어 표현
단순화- 제한된 표기법이나 언어로 표현
명확성- 이해하기 쉽게 표헌
=> 관점으로는 데이터/프로세스/상관 관점이 있다
데이터 관점: 업무와 데이터 사이의 관계
프로세스 관점: 진행중이거나 진행되어야 하는 업무
상관 관점: 데이터에 대한 업무처리 방식의 영향

* 데이터 모델링의 중요성 및 유의점 -> 중복/ 비유연성/ 비일관성
중복: 같은 시간에 같은 데이터를 제공하는 것
비유연성: 사소한 업무 변화에 데이터가 수시로 변경 X
비일관성: 신용 상태에 대한 갱신 없이 고객의 납부 이력 갱신 안됨


데이터 모델링 -> 정보 시스템 구축을 위한 데이터 관점의 업무 분석 기법
=> 목적: 정보에 대한 표기법 통일- 업무내용 분석(정확도 증대) / 데이터 모델을 기초로 DB 생성
=> 기능: 가시화/명세화/구조화된 틀 제공/문서화/다양한 관점 제공/구체화
=> 중요성: 파급효과(Leverage) / 간결한 표현(Conciseness) - 정보 요구사항과 한계를 간결하게 표현하는 도구 /
데이터 품질 >> 1. 유일성-데이터 중복 저장 방지 2.유연성 - 데이터 정의와 데이터 사용 프로세스 분리 3. 일관성
=> 이해관계자 - 개발자 / DBA / 모델러 / 현업업무전문가(완성된 모델을 정확히 해석할 수 있어야 함)

* 데이터 모델링 3단계
1) 개념적 모델링: 엔터티와 속성을 도출하고 ERD 작성, 업무중심적이고 포괄적인 수준의 모델링
2) 논리적 모델링: 식별자를 도출하고 속성/관계 등을 정의, 정규화를 수행하여 데이터 모델의 독립성과 재사용성 확보,논리 데이터 모델은 완료상태
3) 물리적 모델링: DB를 구축, 성능 및 보안 등등 물리적인 성격 고려
# 프로젝트 생명주기(Life Cycle): 계획 > 분석 > 설계 > 개발 > 테스트 > 전환/이행 으로 구성
-> 계획과 분석 단계는 개념적 모델링, 분석 단계는 논리적 모델링, 설계 단계는 물리적 모델링에 해당

* DB의 3단계 구조 - 데이터 독립성 확보를 목표로 함
1. 외부 단계: 외부 스키마들이 존재하는 단계
2. 개념적 단계: 개념 스키마가 존재하는 단계
3. 내부적 단계: 내부 스키마가 존재하는 단계
=> 스키마(schema): DB에 저장되는 데이터 구조와 제약조건을 정의 ex) 스키마:DB:테이블 = 평면도:집:방
=> 인스턴스(Instance): DB에 실제로 저장된 값
# DB 독립성의 필요성- 데이터의 중복성과 복잡도 증가로 인한 유지보수 비용 증가 / 요구사항 대응저하

* 3층 스키마(3-level schema)
외부 스키마: 각 사용자 단계의 개인적 DB 스키마, 사용자 관점, 응용 프로그램이 접근하는 DB 정의
개념 스키마: 조직 전체의 통합된 DB 스키마, 설계자 관점 데이터 모델링의 지향점
내부 스키마: 물리적으로 데이터가 저장되는 방법을 표현하는 스키마, 개발자관점.물리적 저장구조

* 데이터의 독립성
=> 논리적 독립성 -> 외부 스키마가 개념 스키마 변화에 무관 / 논리적 사상 x
# 개념 스키마가 변경되어도 외부 스키마에 영향 x, 개념 스키마 변경 시 외부&개념 사상만 수정
=> 물리적 독립성 -> 개념 스키마가 내부 스키마 변화에 무관 / 물리적 사상 x
# 내부 스키마가 변경되어도 개념 스키마에 영향 x, 외부 스키마 변경 시 내부&개념 사상만 수정
# 데이터 모델링 3요소: 엔터티, 관계, 속성

* ERD(Entity Relationship Diagram)
=> 엔터티는 사각형 / 관계는 마름모 / 속성은 타원형으로 표현 >> 현실의 데이터를 모두 구현 가능
=> 순서: 엔터티 도출 > 엔터티 배치 > 엔터티 간 관계 설정 > 관계명 기술 > 관계차수 표현(1:1 1:n n:m) > 관계선택사양 표현 (필수/선택)
=> 좋은 모델링의 요건: 완전성 / 중복 배제 / 업무 규칙 / 데이터 재사용 / 의사소통 / 통합성 

▶ 2절 엔터티

1) 정의: 업무에서 관리해야 하는 데이터의 집합, 명사형, 인스턴스 집합
2) 특징: 업무에서 필요로함 / 유일한 식별자를 가짐 / 2개 이상의 인스턴스를 포함함 / 업무 프로세스에 이용됨 / 속성 또는 괸계를 가짐
3) 종류
* 유무형에 따른 분류
=> 유형 엔터티: 물리적 형태가 있고 지속적으로 활용되는 엔터티
=> 개념 엔터티: 물리적 형태 x

* 발생시점에 따른 분류
=> 기본 엔터티(key entity): 독립적으로 생성되는 엔터티
=> 중심 엔터티(main entity): 기본 엔터티와 행위 엔터티 중간에 존재
=> 행위 엔터티(Active entity): 2개 이상의 부모 엔터티로부터 발생함, 비즈니스 프로세스를 실행하면서 생성되는 엔터티, 지속적으로 정보가 추가되고 변경되어 데이터 양이 가장 많다.

4) 명명 규칙: 현업업무에서 사용하는 용어 / 약어 지양 / 단수 명사 사용 / 유일성 보장 / 명확성

▶ 3절 속성

1) 정의: 엔터티가 가지는 최소 의미 단위, 인스턴스 구성요소
2) 엔터티와 인스턴스 및 속성과 속성값 간의 관계
=> 엔터티 > 인스턴스 > 속성 > 속성값
3) 속성 표기법: IE / Barker 표기법
4) 특징: 업무에서 필요하ㅣ고 관리하고자 하는 정보 / 주식별자에 함수적으로 종속됨 / 속성값 하나만 가짐(하나 이상의 속성값이면 정규화 필요)
5) 종류
* 특성에 따른 분류
=> 기본 속성: 비즈니스 프로세스에서 도출되는 본래의 속성
=> 설계 속성: 데이터 모델링 과정에서 업무 규칙화를 위해 발생
=> 파생 속성: 다른 속성에 의해 만들어지는 속성

* 분해 가능 여부에 따른 분류
=> 단일 속성 / 복합 속성
=> 단일값 속성 / 다중값 속성 (속성값을 의미)

* 엔터티 구성방식에 따른 분류
=> 기본키 속성: 엔터티를 식별할 수 있는 속성
=> 외래키 속성: 다른 엔터티와의 관계에서 포홤된 속성
=> 일반 속성: 엔터티에 포함되고 PK 나 FK 속성이 아닌 속성

6) 도메인: 속성이 가질 수 있는 값의 범위

▶ 4절 관계

1) 정의: 엔터티 간의 논리적인 관련성, ★동사형★
2) 관계의 패어링: 인스턴스 간 개별적 관계
3) 관계 표기법: 관계명 / 관계차수 / 괸계선택사양
=> 관계차수(Cardinality): 관계 내 튜플의 전체 개수, 1은 직선 그 이상은 삼발로 표시
=> 관계선택사양(Optionality): 필수는 | 선택은 O로 표시
4) 종류

* ERD 기준: 표기구분 안함
=> 존재 관계: 엔터티 간의 상태
=> 행위 괸계: 엔터티 간에 발생하는 행위

* UML 기준
=> 연관 관계: 실선 표기
=> 의존 관계: 점선 표기

* 식별자에 따른 분류
=> 식별 관계: 부모 엔터티의 식별자를 자식 엔터티의 주식별자로 사용
# 약한 엔터티 (부모 엔터티에 종속되어 존재)
=> 비식별 관계: 부모 엔터티의 식별자를 자식 엔터티에서 일반 컬럼으로 참조 사용, 약한 종속 관계
# 주식별자가 많아지는 것을 방지 / 관계 강약 분석 / 자식 엔터티의 독립 PK 필요 / SQL 복잡성과 개발 생산성 고려 필요

5) 관계 읽기: 각각의/하나의 > 기준 엔터티 > 관계차수 > 대상 엔터티 > 관계선택사양 > 관계명

▶ 5절 식별자

1) 정의: 엔터티를 대표할 수 있는 유일성을 만족하는 속성
2) 특징: 유일성 / 최소성 / 불변성 / 존재성
3) 종류

* 대표성 여부에 따른 분류
=> 주식별자: 대표성을 만족
=> 보조식별자: 유일성과 최소성만 만족, 참조 관계 연결 사용 x
# DB 키의 종류
기본키(엔터티 대표) / 후보키(유일성과 최소성) / 슈퍼키(유일성) / 대체키(기본키 제외 나머지) / 외래키

* 생성 여부에 따른 분류
=> 내부식별자: 자연스럽게 존재
=> 외부식별자: 다른 엔터티와의 관계를 통해 생성

* 속성 수에 따른 분류
=> 단일 식별자 / 복합 식별자

* 대체 여부에 따른 분류
=> 본질 식별자: 대체될 수 없음
=> 인조 식별자: 인위적으로 만들어지는 대체가능한 식별자(순서번호) 를 사용하여 생성된 식별자

4) 주식별자 도출 기준: 업무에서 자주 이용되는 속성 / 이름 명명 지양 / 복합 식별자 
